package org.eclipse.scout.saml.tests;

import com.google.inject.Inject;
import com.google.inject.Provider;
import org.eclipse.scout.saml.SamlInjectorProvider;
import org.eclipse.scout.saml.saml.Model;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.junit4.InjectWith;
import org.eclipse.xtext.junit4.XtextRunner;
import org.eclipse.xtext.junit4.util.ParseHelper;
import org.eclipse.xtext.junit4.validation.ValidationTestHelper;
import org.eclipse.xtext.resource.XtextResourceSet;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(value = XtextRunner.class)
@InjectWith(value = SamlInjectorProvider.class)
@SuppressWarnings("all")
public class ComplexFormTests {
  @Inject
  private ParseHelper<Model> _parseHelper;
  
  @Inject
  private ValidationTestHelper _validationTestHelper;
  
  @Inject
  private Provider<XtextResourceSet> resourceSetProvider;
  
  @Test
  public void testComplexFormsOverFiles() {
    try {
      final XtextResourceSet resourceSet = this.resourceSetProvider.get();
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("module org.eclipse.scout.saml.tests.complex");
      _builder.newLine();
      _builder.newLine();
      _builder.append("translation trans.text1 default_lang=\"text1_default\" en=\"text1_en\" de_CH=\"text1_de_CH\"");
      _builder.newLine();
      _builder.append("translation trans.text2 default_lang=\"text2_default\"");
      _builder.newLine();
      _builder.append("translation trans.text3 default_lang=\"text3_default\"");
      _builder.newLine();
      _builder.newLine();
      _builder.append("logic CodeLoadLogSnippet placement=inline {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("\"System.out.println(\\\"execLoadCodes\\\");\"");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("logic FormLoadLogSnippet placement=server {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("\"System.out.println(\\\"execLoad\\\"); return formData;\"");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("logic RegexValidationSnippet placement=inline {");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("\"if (rawValue != null && !rawValue.matches([A-Z0-9])) { throw new VetoException(ScoutTexts.get(\\\"InvalidValueMessageX\\\", rawValue)); } return rawValue;\"");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("template CheckBoxField definition=\"org.eclipse.scout.rt.client.ui.form.fields.checkbox.AbstractCheckBox\"");
      _builder.newLine();
      _builder.newLine();
      _builder.append("code Departments id=\"\\\"Main\\\"\" value_type=\"java.lang.String\" text=trans.text1 {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("code Germany id=\"2\" value_type=\"java.lang.Integer\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("code France id=\"3\" value_type=\"java.lang.Integer\" {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("code Paris id=\"4\" value_type=\"java.lang.Integer\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("code Marseille id=\"5\" value_type=\"java.lang.Integer\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic event=load exec=CodeLoadLogSnippet");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic event=load placement=inline {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"return null;\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic placement=inline {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"public final static int CustomIntField = 101;\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("lookup Levels {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic placement=server {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"private LookupRow[] createDummyData() {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("return new LookupRow[]{new LookupRow(100L, \\\"Value 1\\\"), new LookupRow(200L, \\\"Value 2\\\")};");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("}\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic event=all placement=server {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"return createDummyData();\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("form ComplexLogicTest modal=false columns=3 title=trans.text1 subtitle=trans.text2 width_pixels=1000  {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic placement=server event=new_store {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"System.out.println(\\\"server call create\\\"); return formData;\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic placement=inline event=new_store {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"System.out.println(\\\"inline logic between backendcall and client logic call\\\");\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic placement=client event=new_store {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"System.out.println(\\\"client call create\\\");\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic event=new_load exec=FormLoadLogSnippet");
      _builder.newLine();
      _builder.append("  ");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("logic InlineRefreshSnippet placement=client {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("\"System.out.println(\\\"client service refresh 2\\\");\"");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("key Refresh stroke=\"f5\" {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("logic event=activated placement=server {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("\"System.out.println(\\\"refresh on backend\\\"); return formData;\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("logic event=activated placement=inline {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("\"System.out.println(\\\"inline refresh\\\");\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("logic event=activated placement=client {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("\"System.out.println(\\\"client service refresh 1\\\");\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("logic event=activated exec=InlineRefreshSnippet");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("form ComplexFieldTest {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("sequence SequenceTest text=trans.text1 enabled=false visible=false label_visible=false width=2 width_pixels=600 {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("string StringAreaTest text=trans.text1 enabled=false visible=false label_visible=false master=StringTest mandatory=true maxlen=64 height=4 width=2 width_pixels=100 horizontal_align=right");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("string StringTest text=trans.text2 enabled=false visible=false label_visible=false mandatory=true maxlen=128 height=1 width=2 width_pixels=200 horizontal_align=center uppercase=true");
      _builder.newLine();
      _builder.append("  \t");
      _builder.append("string StringWrapped text=trans.text2 enabled=true visible=true label_visible=true wrap_text=true height=4");
      _builder.newLine();
      _builder.append("  \t");
      _builder.append("string StringInputMasked text=trans.text2 enabled=true visible=true label_visible=true mask_input=true");
      _builder.newLine();
      _builder.append("  \t");
      _builder.append("label LabelTest text=trans.text2 enabled=true visible=true wrap_text=true");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("group GroupTest text=trans.text2 columns=3 enabled=false visible=false label_visible=false border_visible=false border_decoration=line height=10 width=3 width_pixels=500 {");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("bigdecimal BigDecimalTest text=trans.text1 enabled=false visible=false percent=true grouping=false label_visible=false mandatory=true width=2 width_pixels=333 horizontal_align=left fraction_digits=4 min=20.2 max=200.002");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("bigdecimal BigDecimal2Test format=\"0000.00\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("long LongTest text=trans.text1 enabled=false visible=false label_visible=false mandatory=true width=2 width_pixels=76 horizontal_align=left min=2 max=4 format=\"0000\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("date DateTest text=trans.text2 enabled=false visible=false label_visible=false mandatory=true width=2 format=\"dd.MM.yyyy\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("smartfield SmartFieldTest1 text=trans.text1 enabled=false visible=false label_visible=false mandatory=true code=Departments width=2 value_type=\"java.lang.String\" ");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("list TestList1 text=trans.text1 enabled=false visible=false label_visible=false mandatory=true code=Departments width=2 value_type=\"java.lang.String\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("button TestButton text=trans.text1 enabled=false visible=false process_button=false width=2 width_pixels=30 type=normal {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("menu MenuTest1 text=trans.text1 enabled=true visible=true single_select=true multi_select=false empty_select=true type=cancel");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("string StringRegex text=trans.text1 mandatory=true regex_validation=\"[0-9]{1}\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("string StringNamedValidationLogic text=trans.text1 mandatory=false {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("logic event=validate_value exec=RegexValidationSnippet");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("string StringAnonymousValidationLogic text=trans.text1 mandatory=false {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("logic event=validate_value placement=inline {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("\"if (rawValue != null && !rawValue.matches([A-Z0-9])) { throw new VetoException(ScoutTexts.get(\\\"InvalidValueMessageX\\\", rawValue)); } return rawValue;\"");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("table TestTable text=trans.text1 enabled=false visible=false label_visible=false height=6 width=3 width_pixels=700 {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("menu MenuTest2 text=trans.text1 enabled=true visible=true single_select=false multi_select=true empty_select=true type=separator");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("column ColumnTest1 type=date visible=false text=trans.text1 width=30 displayable=false");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("column ColumnTest2 type=string visible=true text=trans.text2 width=31 displayable=true");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("column ColumnTest3 type=int visible=true text=trans.text1 width=32 displayable=true");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("column ColumnTest4 type=bigdecimal visible=true text=trans.text2 width=33 displayable=true");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("tabbox TestTabBox enabled=false visible=false width=3 width_pixels=650 {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("tab TestTab1 text=trans.text1 enabled=false visible=false columns=1 {");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("list TestList2 text=trans.text2 enabled=true visible=true label_visible=true mandatory=false lookup=Levels width_pixels=100 value_type=\"java.lang.Long\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("smartfield SmartFieldTest2 text=trans.text2 enabled=true visible=true label_visible=true mandatory=false lookup=Levels width_pixels=77 value_type=\"java.lang.Long\" {");
      _builder.newLine();
      _builder.append("          ");
      _builder.append("menu MenuTest3 text=trans.text2 enabled=false visible=false single_select=true multi_select=true empty_select=true type=normal");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("tab TestTab2 text=trans.text2 columns=1 {");
      _builder.newLine();
      _builder.append("      \t");
      _builder.append("filechooser TestFileChooser1 text=trans.text1 enabled=false visible=false width=5 width_pixels=105 label_visible=false mandatory=true maxlen=300 mode=directory type=load default_directory=\"C:\\\\Users\" show_directory=true show_filename=false show_extension=false");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("filechooser TestFileChooser2 text=trans.text2 mode=file type=store extensions=\"jpg jpeg png bmp gif\" default_directory=\"C:\\\\Program Files\" show_directory=false show_filename=true show_extension=true");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("radio_group TestRadioButtons text=trans.text1 enabled=false visible=false width=5 width_pixels=105 label_visible=false mandatory=true value_type=\"java.lang.Integer\" {");
      _builder.newLine();
      _builder.append("          ");
      _builder.append("option Opt1 text=trans.text1 value=\"10\" enabled=false");
      _builder.newLine();
      _builder.append("          ");
      _builder.append("option Opt2 text=trans.text2 value=\"20\" visible=false");
      _builder.newLine();
      _builder.append("          ");
      _builder.append("option Opt3 text=trans.text3 value=\"30\"");
      _builder.newLine();
      _builder.append("        ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("custom_field CheckBoxCustom super_type=CheckBoxField text=trans.text1 enabled=false visible=false label_visible=false width=3 width_pixels=44");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("check TestCheckbox text=trans.text2 enabled=false visible=false width=3 width_pixels=102 label_visible=false mandatory=true");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("button TestOkButton text=trans.text2 process_button=true type=ok");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      Model _parse = this._parseHelper.parse(_builder, resourceSet);
      this._validationTestHelper.assertNoErrors(_parse);
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("module test.aa.bb");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("translation BuDatum default_lang=\"Bu-Datum\"");
      _builder_1.newLine();
      _builder_1.append("translation Text default_lang=\"Text\"");
      _builder_1.newLine();
      _builder_1.append("translation Valuta default_lang=\"Valuta\"");
      _builder_1.newLine();
      _builder_1.append("translation Sy default_lang=\"Sy\"");
      _builder_1.newLine();
      _builder_1.append("translation CpNr default_lang=\"Cp.-Nr.\"");
      _builder_1.newLine();
      _builder_1.append("translation SollHaben default_lang=\"Soll/Haben\"");
      _builder_1.newLine();
      _builder_1.append("translation Saldo default_lang=\"Saldo\"");
      _builder_1.newLine();
      _builder_1.append("translation InfoF7Col default_lang=\"Info                                     F7\"");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("form TableTest {");
      _builder_1.newLine();
      _builder_1.append("\t");
      _builder_1.append("logic event=modify_load placement=server {");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("\"System.out.println(\\\"TableTest form startup\\\");");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("formData.getStornoTable().addRow(new Object[]{new java.util.Date(), \\\"text\\\", new java.util.Date(), 15, 134592, \\\"sollhaben text\\\", 135.25});");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("return formData;\"");
      _builder_1.newLine();
      _builder_1.append("\t");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("\t");
      _builder_1.append("table StornoTable label_visible=false height=10 width=2 {");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("menu InfoF7Menu text=InfoF7Col");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColBuDatum text=BuDatum type=date width=100");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColText text=Text type=string width=138");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColValuta text=Valuta type=date width=100 visible=false");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColSy text=Sy type=int width=27");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColCpNr text=CpNr type=int width=53");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColSollHaben text=SollHaben type=string width=222");
      _builder_1.newLine();
      _builder_1.append("\t\t");
      _builder_1.append("column ColSaldo text=Saldo type=bigdecimal width=160");
      _builder_1.newLine();
      _builder_1.append("\t");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      Model _parse_1 = this._parseHelper.parse(_builder_1, resourceSet);
      this._validationTestHelper.assertNoErrors(_parse_1);
    } catch (Exception _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
