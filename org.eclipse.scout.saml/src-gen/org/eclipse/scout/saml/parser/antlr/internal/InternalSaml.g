/*
* generated by Xtext
*/
grammar InternalSaml;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.scout.saml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.scout.saml.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.scout.saml.services.SamlGrammarAccess;

}

@parser::members {

 	private SamlGrammarAccess grammarAccess;
 	
    public InternalSamlParser(TokenStream input, SamlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SamlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getModuleModuleElementParserRuleCall_0_0()); 
	    }
		lv_module_0_0=ruleModuleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"module",
        		lv_module_0_0, 
        		"ModuleElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getImportsImportElementParserRuleCall_1_0()); 
	    }
		lv_imports_1_0=ruleImportElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_1_0, 
        		"ImportElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTranslationsTranslationElementParserRuleCall_2_0_0()); 
	    }
		lv_translations_2_0=ruleTranslationElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"translations",
        		lv_translations_2_0, 
        		"TranslationElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getCodesCodeElementParserRuleCall_2_1_0()); 
	    }
		lv_codes_3_0=ruleCodeElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"codes",
        		lv_codes_3_0, 
        		"CodeElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getLookupsLookupElementParserRuleCall_2_2_0()); 
	    }
		lv_lookups_4_0=ruleLookupElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"lookups",
        		lv_lookups_4_0, 
        		"LookupElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTemplatesTemplateElementParserRuleCall_2_3_0()); 
	    }
		lv_templates_5_0=ruleTemplateElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"templates",
        		lv_templates_5_0, 
        		"TemplateElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getFormsFormElementParserRuleCall_2_4_0()); 
	    }
		lv_forms_6_0=ruleFormElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"forms",
        		lv_forms_6_0, 
        		"FormElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); } 
	 iv_ruleBooleanType=ruleBooleanType 
	 { $current=$iv_ruleBooleanType.current.getText(); }  
	 EOF 
;

// Rule BooleanType
ruleBooleanType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanTypeAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBooleanTypeAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleLogicEventType
entryRuleLogicEventType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicEventTypeRule()); } 
	 iv_ruleLogicEventType=ruleLogicEventType 
	 { $current=$iv_ruleLogicEventType.current.getText(); }  
	 EOF 
;

// Rule LogicEventType
ruleLogicEventType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='all' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getAllKeyword_0()); 
    }

    |
	kw='modify_load' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getModify_loadKeyword_1()); 
    }

    |
	kw='modify_store' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getModify_storeKeyword_2()); 
    }

    |
	kw='new_load' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getNew_loadKeyword_3()); 
    }

    |
	kw='new_store' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getNew_storeKeyword_4()); 
    }

    |
	kw='changed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getChangedKeyword_5()); 
    }

    |
	kw='click' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getClickKeyword_6()); 
    }

    |
	kw='master_changed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getMaster_changedKeyword_7()); 
    }

    |
	kw='init' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getInitKeyword_8()); 
    }

    |
	kw='format_value' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLogicEventTypeAccess().getFormat_valueKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleModuleElement
entryRuleModuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleElementRule()); }
	 iv_ruleModuleElement=ruleModuleElement 
	 { $current=$iv_ruleModuleElement.current; } 
	 EOF 
;

// Rule ModuleElement
ruleModuleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModuleElementAccess().getModuleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleElementAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImportElement
entryRuleImportElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportElementRule()); }
	 iv_ruleImportElement=ruleImportElement 
	 { $current=$iv_ruleImportElement.current; } 
	 EOF 
;

// Rule ImportElement
ruleImportElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportElementAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportElementAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportElementRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTranslationElement
entryRuleTranslationElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTranslationElementRule()); }
	 iv_ruleTranslationElement=ruleTranslationElement 
	 { $current=$iv_ruleTranslationElement.current; } 
	 EOF 
;

// Rule TranslationElement
ruleTranslationElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='translation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTranslationElementAccess().getTranslationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTranslationElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTranslationElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTranslationElementAccess().getTranslationsLanguageAttributeParserRuleCall_2_0()); 
	    }
		lv_translations_2_0=ruleLanguageAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTranslationElementRule());
	        }
       		add(
       			$current, 
       			"translations",
        		lv_translations_2_0, 
        		"LanguageAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleLanguageAttribute
entryRuleLanguageAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLanguageAttributeRule()); }
	 iv_ruleLanguageAttribute=ruleLanguageAttribute 
	 { $current=$iv_ruleLanguageAttribute.current; } 
	 EOF 
;

// Rule LanguageAttribute
ruleLanguageAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_lang_0_0=RULE_ID
		{
			newLeafNode(lv_lang_0_0, grammarAccess.getLanguageAttributeAccess().getLangIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lang",
        		lv_lang_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguageAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_text_2_0=RULE_STRING
		{
			newLeafNode(lv_text_2_0, grammarAccess.getLanguageAttributeAccess().getTextSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguageAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleLogicElement
entryRuleLogicElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicElementRule()); }
	 iv_ruleLogicElement=ruleLogicElement 
	 { $current=$iv_ruleLogicElement.current; } 
	 EOF 
;

// Rule LogicElement
ruleLogicElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLogicElementAccess().getLogicElementAction_0(),
            $current);
    }
)	otherlv_1='logic' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLogicElementAccess().getLogicKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getLogicElementAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)?(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getLogicElementAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLogicElementAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLogicElementAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='event' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLogicElementAccess().getEventKeyword_3_0_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLogicElementAccess().getEqualsSignKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicElementAccess().getEventLogicEventTypeParserRuleCall_3_0_2_0()); 
	    }
		lv_event_6_0=ruleLogicEventType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicElementRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_6_0, 
        		"LogicEventType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLogicElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLogicElementAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLogicElementAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_7='placement' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLogicElementAccess().getPlacementKeyword_3_1_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLogicElementAccess().getEqualsSignKeyword_3_1_1());
    }
(
(
(
		lv_placement_9_1=	'client' 
    {
        newLeafNode(lv_placement_9_1, grammarAccess.getLogicElementAccess().getPlacementClientKeyword_3_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
       		setWithLastConsumed($current, "placement", lv_placement_9_1, null);
	    }

    |		lv_placement_9_2=	'server' 
    {
        newLeafNode(lv_placement_9_2, grammarAccess.getLogicElementAccess().getPlacementServerKeyword_3_1_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
       		setWithLastConsumed($current, "placement", lv_placement_9_2, null);
	    }

    |		lv_placement_9_3=	'inline' 
    {
        newLeafNode(lv_placement_9_3, grammarAccess.getLogicElementAccess().getPlacementInlineKeyword_3_1_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
       		setWithLastConsumed($current, "placement", lv_placement_9_3, null);
	    }

)

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLogicElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLogicElementAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLogicElementAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_10='exec' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLogicElementAccess().getExecKeyword_3_2_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLogicElementAccess().getEqualsSignKeyword_3_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getLogicElementAccess().getExecLogicElementCrossReference_3_2_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLogicElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getLogicElementAccess().getUnorderedGroup_3());
	}

)(	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLogicElementAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		lv_source_14_0=RULE_STRING
		{
			newLeafNode(lv_source_14_0, grammarAccess.getLogicElementAccess().getSourceSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"source",
        		lv_source_14_0, 
        		"STRING");
	    }

)
)	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLogicElementAccess().getRightCurlyBracketKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleCodeElement
entryRuleCodeElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeElementRule()); }
	 iv_ruleCodeElement=ruleCodeElement 
	 { $current=$iv_ruleCodeElement.current; } 
	 EOF 
;

// Rule CodeElement
ruleCodeElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='code' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodeElementAccess().getCodeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCodeElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='id' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCodeElementAccess().getIdKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCodeElementAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_id_4_0=RULE_INT
		{
			newLeafNode(lv_id_4_0, grammarAccess.getCodeElementAccess().getIdINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleLookupElement
entryRuleLookupElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLookupElementRule()); }
	 iv_ruleLookupElement=ruleLookupElement 
	 { $current=$iv_ruleLookupElement.current; } 
	 EOF 
;

// Rule LookupElement
ruleLookupElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lookup' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLookupElementAccess().getLookupKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLookupElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLookupElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLookupElementAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLookupElementAccess().getLogicLogicElementParserRuleCall_3_0()); 
	    }
		lv_logic_3_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLookupElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_3_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLookupElementAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTemplateElement
entryRuleTemplateElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateElementRule()); }
	 iv_ruleTemplateElement=ruleTemplateElement 
	 { $current=$iv_ruleTemplateElement.current; } 
	 EOF 
;

// Rule TemplateElement
ruleTemplateElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateElementAccess().getTemplateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTemplateElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='definition' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateElementAccess().getDefinitionKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTemplateElementAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_definition_4_0=RULE_STRING
		{
			newLeafNode(lv_definition_4_0, grammarAccess.getTemplateElementAccess().getDefinitionSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"definition",
        		lv_definition_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFormElement
entryRuleFormElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormElementRule()); }
	 iv_ruleFormElement=ruleFormElement 
	 { $current=$iv_ruleFormElement.current; } 
	 EOF 
;

// Rule FormElement
ruleFormElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='form' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFormElementAccess().getFormKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFormElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getFormElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='modal' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFormElementAccess().getModalKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFormElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getModalBooleanTypeParserRuleCall_2_0_2_0()); 
	    }
		lv_modal_5_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		set(
       			$current, 
       			"modal",
        		lv_modal_5_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='columns' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFormElementAccess().getColumnsKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFormElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		lv_columns_8_0=RULE_INT
		{
			newLeafNode(lv_columns_8_0, grammarAccess.getFormElementAccess().getColumnsINTTerminalRuleCall_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"columns",
        		lv_columns_8_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='title' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFormElementAccess().getTitleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFormElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormElementRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getFormElementAccess().getTitleTranslationElementCrossReference_2_2_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFormElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='subtitle' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFormElementAccess().getSubtitleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFormElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormElementRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getFormElementAccess().getSubtitleTranslationElementCrossReference_2_3_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFormElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getFormElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFormElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getLogicLogicElementParserRuleCall_3_1_0_0()); 
	    }
		lv_logic_16_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_16_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getFieldsFormFieldElementParserRuleCall_3_1_1_0()); 
	    }
		lv_fields_17_0=ruleFormFieldElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_17_0, 
        		"FormFieldElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFormElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleFormFieldElement
entryRuleFormFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormFieldElementRule()); }
	 iv_ruleFormFieldElement=ruleFormFieldElement 
	 { $current=$iv_ruleFormFieldElement.current; } 
	 EOF 
;

// Rule FormFieldElement
ruleFormFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormFieldElementAccess().getCompositeFieldElementParserRuleCall_0()); 
    }
    this_CompositeFieldElement_0=ruleCompositeFieldElement
    { 
        $current = $this_CompositeFieldElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFormFieldElementAccess().getValueFieldElementParserRuleCall_1()); 
    }
    this_ValueFieldElement_1=ruleValueFieldElement
    { 
        $current = $this_ValueFieldElement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFormFieldElementAccess().getCustomFieldElementParserRuleCall_2()); 
    }
    this_CustomFieldElement_2=ruleCustomFieldElement
    { 
        $current = $this_CustomFieldElement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFormFieldElementAccess().getButtonElementParserRuleCall_3()); 
    }
    this_ButtonElement_3=ruleButtonElement
    { 
        $current = $this_ButtonElement_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCompositeFieldElement
entryRuleCompositeFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeFieldElementRule()); }
	 iv_ruleCompositeFieldElement=ruleCompositeFieldElement 
	 { $current=$iv_ruleCompositeFieldElement.current; } 
	 EOF 
;

// Rule CompositeFieldElement
ruleCompositeFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCompositeFieldElementAccess().getSequenceBoxElementParserRuleCall_0()); 
    }
    this_SequenceBoxElement_0=ruleSequenceBoxElement
    { 
        $current = $this_SequenceBoxElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCompositeFieldElementAccess().getGroupBoxElementParserRuleCall_1()); 
    }
    this_GroupBoxElement_1=ruleGroupBoxElement
    { 
        $current = $this_GroupBoxElement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSequenceBoxElement
entryRuleSequenceBoxElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceBoxElementRule()); }
	 iv_ruleSequenceBoxElement=ruleSequenceBoxElement 
	 { $current=$iv_ruleSequenceBoxElement.current; } 
	 EOF 
;

// Rule SequenceBoxElement
ruleSequenceBoxElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sequence_box' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceBoxElementAccess().getSequence_boxKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSequenceBoxElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceBoxElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceBoxElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSequenceBoxElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceBoxElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getSequenceBoxElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSequenceBoxElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSequenceBoxElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSequenceBoxElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSequenceBoxElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSequenceBoxElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSequenceBoxElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSequenceBoxElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSequenceBoxElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceBoxElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getSequenceBoxElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSequenceBoxElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSequenceBoxElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getLogicLogicElementParserRuleCall_3_1_0_0()); 
	    }
		lv_logic_19_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_19_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getFieldsFormFieldElementParserRuleCall_3_1_1_0()); 
	    }
		lv_fields_20_0=ruleFormFieldElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_20_0, 
        		"FormFieldElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSequenceBoxElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleGroupBoxElement
entryRuleGroupBoxElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupBoxElementRule()); }
	 iv_ruleGroupBoxElement=ruleGroupBoxElement 
	 { $current=$iv_ruleGroupBoxElement.current; } 
	 EOF 
;

// Rule GroupBoxElement
ruleGroupBoxElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='group_box' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupBoxElementAccess().getGroup_boxKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupBoxElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGroupBoxElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getGroupBoxElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='columns' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGroupBoxElementAccess().getColumnsKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		lv_columns_8_0=RULE_INT
		{
			newLeafNode(lv_columns_8_0, grammarAccess.getGroupBoxElementAccess().getColumnsINTTerminalRuleCall_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"columns",
        		lv_columns_8_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='enabled' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGroupBoxElementAccess().getEnabledKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupBoxElementAccess().getEnabledBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_enabled_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupBoxElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGroupBoxElementAccess().getVisibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupBoxElementAccess().getVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_visible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupBoxElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='label_visible' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getGroupBoxElementAccess().getLabel_visibleKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupBoxElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_4_2_0()); 
	    }
		lv_labelVisible_17_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupBoxElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_17_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='border_visible' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getGroupBoxElementAccess().getBorder_visibleKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupBoxElementAccess().getBorderVisibleBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_borderVisible_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupBoxElementRule());
	        }
       		set(
       			$current, 
       			"borderVisible",
        		lv_borderVisible_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>((	otherlv_21='border_decoration' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getGroupBoxElementAccess().getBorder_decorationKeyword_2_6_0_0());
    }
	otherlv_22='=' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_6_0_1());
    }
(
(
(
		lv_borderDecoration_23_1=	'empty' 
    {
        newLeafNode(lv_borderDecoration_23_1, grammarAccess.getGroupBoxElementAccess().getBorderDecorationEmptyKeyword_2_6_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
       		setWithLastConsumed($current, "borderDecoration", lv_borderDecoration_23_1, null);
	    }

    |		lv_borderDecoration_23_2=	'line' 
    {
        newLeafNode(lv_borderDecoration_23_2, grammarAccess.getGroupBoxElementAccess().getBorderDecorationLineKeyword_2_6_0_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
       		setWithLastConsumed($current, "borderDecoration", lv_borderDecoration_23_2, null);
	    }

    |		lv_borderDecoration_23_3=	'section' 
    {
        newLeafNode(lv_borderDecoration_23_3, grammarAccess.getGroupBoxElementAccess().getBorderDecorationSectionKeyword_2_6_0_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
       		setWithLastConsumed($current, "borderDecoration", lv_borderDecoration_23_3, null);
	    }

    |		lv_borderDecoration_23_4=	'auto' 
    {
        newLeafNode(lv_borderDecoration_23_4, grammarAccess.getGroupBoxElementAccess().getBorderDecorationAutoKeyword_2_6_0_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
       		setWithLastConsumed($current, "borderDecoration", lv_borderDecoration_23_4, null);
	    }

)

)
))(	otherlv_24='master' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getGroupBoxElementAccess().getMasterKeyword_2_6_1_0());
    }
	otherlv_25='=' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getGroupBoxElementAccess().getEqualsSignKeyword_2_6_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupBoxElementRule());
	        }
        }
	otherlv_26=RULE_ID
	{
		newLeafNode(otherlv_26, grammarAccess.getGroupBoxElementAccess().getMasterValueFieldElementCrossReference_2_6_1_2_0()); 
	}

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getGroupBoxElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_27='{' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getGroupBoxElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getGroupBoxElementAccess().getLogicLogicElementParserRuleCall_3_1_0_0()); 
	    }
		lv_logic_28_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupBoxElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_28_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupBoxElementAccess().getFieldsFormFieldElementParserRuleCall_3_1_1_0()); 
	    }
		lv_fields_29_0=ruleFormFieldElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupBoxElementRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_29_0, 
        		"FormFieldElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getGroupBoxElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleValueFieldElement
entryRuleValueFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueFieldElementRule()); }
	 iv_ruleValueFieldElement=ruleValueFieldElement 
	 { $current=$iv_ruleValueFieldElement.current; } 
	 EOF 
;

// Rule ValueFieldElement
ruleValueFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueFieldElementAccess().getStringElementParserRuleCall_0()); 
    }
    this_StringElement_0=ruleStringElement
    { 
        $current = $this_StringElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueFieldElementAccess().getDoubleElementParserRuleCall_1()); 
    }
    this_DoubleElement_1=ruleDoubleElement
    { 
        $current = $this_DoubleElement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueFieldElementAccess().getLongElementParserRuleCall_2()); 
    }
    this_LongElement_2=ruleLongElement
    { 
        $current = $this_LongElement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueFieldElementAccess().getDateElementParserRuleCall_3()); 
    }
    this_DateElement_3=ruleDateElement
    { 
        $current = $this_DateElement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueFieldElementAccess().getSmartfieldElementParserRuleCall_4()); 
    }
    this_SmartfieldElement_4=ruleSmartfieldElement
    { 
        $current = $this_SmartfieldElement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringElement
entryRuleStringElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringElementRule()); }
	 iv_ruleStringElement=ruleStringElement 
	 { $current=$iv_ruleStringElement.current; } 
	 EOF 
;

// Rule StringElement
ruleStringElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='string' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringElementAccess().getStringKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStringElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getStringElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStringElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStringElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStringElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getStringElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getStringElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='mandatory' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getStringElementAccess().getMandatoryKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getMandatoryBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_mandatory_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStringElementAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(	otherlv_21='maxlen' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getStringElementAccess().getMaxlenKeyword_2_6_0());
    }
	otherlv_22='=' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getStringElementAccess().getEqualsSignKeyword_2_6_1());
    }
(
(
		lv_maxlen_23_0=RULE_INT
		{
			newLeafNode(lv_maxlen_23_0, grammarAccess.getStringElementAccess().getMaxlenINTTerminalRuleCall_2_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"maxlen",
        		lv_maxlen_23_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStringElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_24='{' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getStringElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_25_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_25_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getStringElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleDoubleElement
entryRuleDoubleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleElementRule()); }
	 iv_ruleDoubleElement=ruleDoubleElement 
	 { $current=$iv_ruleDoubleElement.current; } 
	 EOF 
;

// Rule DoubleElement
ruleDoubleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='double' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDoubleElementAccess().getDoubleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDoubleElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoubleElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDoubleElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getDoubleElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDoubleElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDoubleElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDoubleElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDoubleElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDoubleElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDoubleElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDoubleElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDoubleElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getDoubleElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='mandatory' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDoubleElementAccess().getMandatoryKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDoubleElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getMandatoryBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_mandatory_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDoubleElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDoubleElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_22_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_22_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDoubleElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleLongElement
entryRuleLongElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLongElementRule()); }
	 iv_ruleLongElement=ruleLongElement 
	 { $current=$iv_ruleLongElement.current; } 
	 EOF 
;

// Rule LongElement
ruleLongElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='long' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLongElementAccess().getLongKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLongElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLongElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLongElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getLongElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLongElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLongElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLongElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLongElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLongElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLongElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLongElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getLongElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getLongElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getLongElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='mandatory' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getLongElementAccess().getMandatoryKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getLongElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getMandatoryBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_mandatory_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getLongElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getLongElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_22_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_22_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getLongElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleDateElement
entryRuleDateElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateElementRule()); }
	 iv_ruleDateElement=ruleDateElement 
	 { $current=$iv_ruleDateElement.current; } 
	 EOF 
;

// Rule DateElement
ruleDateElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='date' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateElementAccess().getDateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDateElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDateElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDateElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getDateElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDateElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDateElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDateElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDateElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDateElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDateElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDateElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDateElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getDateElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getDateElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='mandatory' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDateElementAccess().getMandatoryKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDateElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getMandatoryBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_mandatory_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getDateElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDateElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_22_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_22_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDateElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleSmartfieldElement
entryRuleSmartfieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmartfieldElementRule()); }
	 iv_ruleSmartfieldElement=ruleSmartfieldElement 
	 { $current=$iv_ruleSmartfieldElement.current; } 
	 EOF 
;

// Rule SmartfieldElement
ruleSmartfieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='smartfield' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmartfieldElementAccess().getSmartfieldKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSmartfieldElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSmartfieldElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getSmartfieldElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSmartfieldElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSmartfieldElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSmartfieldElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSmartfieldElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getSmartfieldElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='mandatory' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSmartfieldElementAccess().getMandatoryKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getMandatoryBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_mandatory_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(	otherlv_21='code' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSmartfieldElementAccess().getCodeKeyword_2_6_0());
    }
	otherlv_22='=' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_6_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
        }
	otherlv_23=RULE_ID
	{
		newLeafNode(otherlv_23, grammarAccess.getSmartfieldElementAccess().getCodeCodeElementCrossReference_2_6_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 7);
	 				}
					({true}?=>(	otherlv_24='value_type' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSmartfieldElementAccess().getValue_typeKeyword_2_7_0());
    }
	otherlv_25='=' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_7_1());
    }
(
(
		lv_valueType_26_0=RULE_STRING
		{
			newLeafNode(lv_valueType_26_0, grammarAccess.getSmartfieldElementAccess().getValueTypeSTRINGTerminalRuleCall_2_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueType",
        		lv_valueType_26_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2(), 8);
	 				}
					({true}?=>(	otherlv_27='lookup' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSmartfieldElementAccess().getLookupKeyword_2_8_0());
    }
	otherlv_28='=' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getSmartfieldElementAccess().getEqualsSignKeyword_2_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
        }
	otherlv_29=RULE_ID
	{
		newLeafNode(otherlv_29, grammarAccess.getSmartfieldElementAccess().getLookupLookupElementCrossReference_2_8_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSmartfieldElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_30='{' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getSmartfieldElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getLogicLogicElementParserRuleCall_3_1_0_0()); 
	    }
		lv_logic_31_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_31_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getMenusMenuElementParserRuleCall_3_1_1_0()); 
	    }
		lv_menus_32_0=ruleMenuElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		add(
       			$current, 
       			"menus",
        		lv_menus_32_0, 
        		"MenuElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getSmartfieldElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleCustomFieldElement
entryRuleCustomFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomFieldElementRule()); }
	 iv_ruleCustomFieldElement=ruleCustomFieldElement 
	 { $current=$iv_ruleCustomFieldElement.current; } 
	 EOF 
;

// Rule CustomFieldElement
ruleCustomFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='custom_field' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomFieldElementAccess().getCustom_fieldKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCustomFieldElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomFieldElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='template' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomFieldElementAccess().getTemplateKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCustomFieldElementAccess().getEqualsSignKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomFieldElementRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getCustomFieldElementAccess().getTemplateTemplateElementCrossReference_4_0()); 
	}

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 0);
	 				}
					({true}?=>(	otherlv_6='text' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCustomFieldElementAccess().getTextKeyword_5_0_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCustomFieldElementAccess().getEqualsSignKeyword_5_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomFieldElementRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getCustomFieldElementAccess().getTextTranslationElementCrossReference_5_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 1);
	 				}
					({true}?=>(	otherlv_9='enabled' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCustomFieldElementAccess().getEnabledKeyword_5_1_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCustomFieldElementAccess().getEqualsSignKeyword_5_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFieldElementAccess().getEnabledBooleanTypeParserRuleCall_5_1_2_0()); 
	    }
		lv_enabled_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFieldElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 2);
	 				}
					({true}?=>(	otherlv_12='visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCustomFieldElementAccess().getVisibleKeyword_5_2_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCustomFieldElementAccess().getEqualsSignKeyword_5_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFieldElementAccess().getVisibleBooleanTypeParserRuleCall_5_2_2_0()); 
	    }
		lv_visible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFieldElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 3);
	 				}
					({true}?=>(	otherlv_15='label_visible' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCustomFieldElementAccess().getLabel_visibleKeyword_5_3_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCustomFieldElementAccess().getEqualsSignKeyword_5_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFieldElementAccess().getLabelVisibleBooleanTypeParserRuleCall_5_3_2_0()); 
	    }
		lv_labelVisible_17_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFieldElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_17_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5(), 4);
	 				}
					({true}?=>(	otherlv_18='master' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCustomFieldElementAccess().getMasterKeyword_5_4_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCustomFieldElementAccess().getEqualsSignKeyword_5_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomFieldElementRule());
	        }
        }
	otherlv_20=RULE_ID
	{
		newLeafNode(otherlv_20, grammarAccess.getCustomFieldElementAccess().getMasterValueFieldElementCrossReference_5_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getCustomFieldElementAccess().getUnorderedGroup_5());
	}

)(	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getCustomFieldElementAccess().getLeftCurlyBracketKeyword_6_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFieldElementAccess().getLogicLogicElementParserRuleCall_6_1_0_0()); 
	    }
		lv_logic_22_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFieldElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_22_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomFieldElementAccess().getFieldsFormFieldElementParserRuleCall_6_1_1_0()); 
	    }
		lv_fields_23_0=ruleFormFieldElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomFieldElementRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_23_0, 
        		"FormFieldElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getCustomFieldElementAccess().getRightCurlyBracketKeyword_6_2());
    }
)?)
;





// Entry rule entryRuleButtonElement
entryRuleButtonElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getButtonElementRule()); }
	 iv_ruleButtonElement=ruleButtonElement 
	 { $current=$iv_ruleButtonElement.current; } 
	 EOF 
;

// Rule ButtonElement
ruleButtonElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='button' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getButtonElementAccess().getButtonKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getButtonElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getButtonElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonElementRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getButtonElementAccess().getTextTranslationElementCrossReference_2_0_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='enabled' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getButtonElementAccess().getEnabledKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getEnabledBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_enabled_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='visible' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getButtonElementAccess().getVisibleKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getVisibleBooleanTypeParserRuleCall_2_2_2_0()); 
	    }
		lv_visible_11_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_11_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='label_visible' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getButtonElementAccess().getLabel_visibleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getLabelVisibleBooleanTypeParserRuleCall_2_3_2_0()); 
	    }
		lv_labelVisible_14_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		set(
       			$current, 
       			"labelVisible",
        		lv_labelVisible_14_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='master' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getButtonElementAccess().getMasterKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonElementRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getButtonElementAccess().getMasterValueFieldElementCrossReference_2_4_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='process_button' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getButtonElementAccess().getProcess_buttonKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getProcessButtonBooleanTypeParserRuleCall_2_5_2_0()); 
	    }
		lv_processButton_20_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		set(
       			$current, 
       			"processButton",
        		lv_processButton_20_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_21='{' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getButtonElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getLogicLogicElementParserRuleCall_3_1_0_0()); 
	    }
		lv_logic_22_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_22_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getMenusMenuElementParserRuleCall_3_1_1_0()); 
	    }
		lv_menus_23_0=ruleMenuElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		add(
       			$current, 
       			"menus",
        		lv_menus_23_0, 
        		"MenuElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getButtonElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleMenuElement
entryRuleMenuElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMenuElementRule()); }
	 iv_ruleMenuElement=ruleMenuElement 
	 { $current=$iv_ruleMenuElement.current; } 
	 EOF 
;

// Rule MenuElement
ruleMenuElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='menu' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMenuElementAccess().getMenuKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMenuElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMenuElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getMenuElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMenuElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMenuElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='enabled' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMenuElementAccess().getEnabledKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMenuElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMenuElementAccess().getEnabledBooleanTypeParserRuleCall_2_0_2_0()); 
	    }
		lv_enabled_5_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMenuElementRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_5_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMenuElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMenuElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMenuElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='visible' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMenuElementAccess().getVisibleKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMenuElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMenuElementAccess().getVisibleBooleanTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_visible_8_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMenuElementRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_8_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMenuElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMenuElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getMenuElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='text' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMenuElementAccess().getTextKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMenuElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMenuElementRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getMenuElementAccess().getTextTranslationElementCrossReference_2_2_2_0()); 
	}

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMenuElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getMenuElementAccess().getUnorderedGroup_2());
	}

)(	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMenuElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMenuElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_13_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMenuElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_13_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMenuElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
    }
    this_XAssignment_0=ruleXAssignment
    { 
        $current = $this_XAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	 iv_ruleXAssignment=ruleXAssignment 
	 { $current=$iv_ruleXAssignment.current; } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
    }
    this_XOrExpression_4=ruleXOrExpression
    { 
        $current = $this_XOrExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_7_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_7_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
    }
    this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
    { 
        $current = $this_XOtherOperatorExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXOtherOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XOtherOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	 iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression 
	 { $current=$iv_ruleXOtherOperatorExpression.current; } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); } 
	 iv_ruleOpOther=ruleOpOther 
	 { $current=$iv_ruleOpOther.current.getText(); }  
	 EOF 
;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_1()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_2()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_0()); 
    }
((((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_0_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_0_0_1()); 
    }
))
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_0()); 
    }
((((
	'<' 

	'<' 
))=>(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_0_0_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_0_0_1()); 
    }
))
    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_1()); 
    }
))
    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_5()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_6()); 
    }

    |
	kw='<=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXCastedExpressionParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXCastedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XCastedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
    }
    this_XCastedExpression_3=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'.' 
(
(
		ruleValidID
)
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
	    }
		lv_value_5_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
)
    |(
(
	'*.' 
 

)
))))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            $current);
    }
)(	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
    }

    |(
(
		lv_nullSafe_8_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_8_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
)
    |(
(
		lv_spreading_9_0=	'*.' 
    {
        newLeafNode(lv_spreading_9_0, grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "spreading", true, "*.");
	    }

)
))))(	otherlv_10='<' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typeArguments_11_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_11_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
	    }
		lv_typeArguments_13_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_13_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='>' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_16_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_16_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
	    }
		lv_memberCallArguments_17_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_17_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_memberCallArguments_18_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_18_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
	    }
		lv_memberCallArguments_20_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_20_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
	    }
		lv_memberCallArguments_22_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_22_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?))*)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
    }
    this_XBlockExpression_1=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
    }
    this_XSwitchExpression_2=ruleXSwitchExpression
    { 
        $current = $this_XSwitchExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); 
    }
    this_XFeatureCall_3=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); 
    }
    this_XLiteral_4=ruleXLiteral
    { 
        $current = $this_XLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); 
    }
    this_XIfExpression_5=ruleXIfExpression
    { 
        $current = $this_XIfExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); 
    }
    this_XForLoopExpression_6=ruleXForLoopExpression
    { 
        $current = $this_XForLoopExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); 
    }
    this_XWhileExpression_7=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); 
    }
    this_XDoWhileExpression_8=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); 
    }
    this_XThrowExpression_9=ruleXThrowExpression
    { 
        $current = $this_XThrowExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); 
    }
    this_XReturnExpression_10=ruleXReturnExpression
    { 
        $current = $this_XReturnExpression_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); 
    }
    this_XTryCatchFinallyExpression_11=ruleXTryCatchFinallyExpression
    { 
        $current = $this_XTryCatchFinallyExpression_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); 
    }
    this_XParenthesizedExpression_12=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_0()); 
    }
    this_XClosure_0=ruleXClosure
    { 
        $current = $this_XClosure_0.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_1()); 
    }
    this_XBooleanLiteral_1=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_2()); 
    }
    this_XNumberLiteral_2=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_3()); 
    }
    this_XNullLiteral_3=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4()); 
    }
    this_XStringLiteral_4=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_5()); 
    }
    this_XTypeLiteral_5=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
    }
))(((((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>(((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
	    }
		lv_declaredFormalParameters_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
	    }
		lv_declaredFormalParameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_5_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
	    }
		lv_expression_6_0=ruleXExpressionInClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"XExpressionInClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	 iv_ruleXExpressionInClosure=ruleXExpressionInClosure 
	 { $current=$iv_ruleXExpressionInClosure.current; } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
    }
)?)*)
;





// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	 iv_ruleXShortClosure=ruleXShortClosure 
	 { $current=$iv_ruleXShortClosure.current; } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
	    }
		lv_declaredFormalParameters_1_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_1_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_4_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShortClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	 iv_ruleXSwitchExpression=ruleXSwitchExpression 
	 { $current=$iv_ruleXSwitchExpression.current; } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
    }
((((((
(
ruleValidID
)
)	':' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); 
	    }
		lv_localVarName_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_switch_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((	'(' 
(
(
ruleValidID
)
)	':' 
))=>(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); 
	    }
		lv_localVarName_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_switch_8_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2());
    }
))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
	    }
		lv_cases_11_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_11_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_12='default' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
	    }
		lv_default_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_typeGuard_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"typeGuard",
        		lv_typeGuard_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); 
	    }
		lv_case_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
	    }
		lv_then_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	 iv_ruleXForLoopExpression=ruleXForLoopExpression 
	 { $current=$iv_ruleXForLoopExpression.current; } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_forExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); 
	    }
		lv_eachExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
	    }
		lv_expressions_2_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
    }
)?)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); }
	 iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock 
	 { $current=$iv_ruleXExpressionInsideBlock.current; } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); 
    }
    this_XVariableDeclaration_0=ruleXVariableDeclaration
    { 
        $current = $this_XVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)((
(
		lv_writeable_1_0=	'var' 
    {
        newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationRule());
	        }
       		setWithLastConsumed($current, "writeable", true, "var");
	    }

)
)
    |	otherlv_2='val' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleValidID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
	    }
		lv_right_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	 iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter 
	 { $current=$iv_ruleFullJvmFormalParameter.current; } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeCrossReference_1_0()); 
	    }
		ruleStaticQualifier		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_1_0()); 
	    }
		lv_typeArguments_3_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_3_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_2_1_0()); 
	    }
		lv_typeArguments_5_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_5_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_2_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_3_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_8_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_8_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_featureCallArguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_featureCallArguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXFeatureCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_featureCallArguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_featureCallArguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleStaticQualifier
entryRuleStaticQualifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStaticQualifierRule()); } 
	 iv_ruleStaticQualifier=ruleStaticQualifier 
	 { $current=$iv_ruleStaticQualifier.current.getText(); }  
	 EOF 
;

// Rule StaticQualifier
ruleStaticQualifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStaticQualifierAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticQualifierAccess().getColonColonKeyword_1()); 
    }
)+
    ;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
    }
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_arguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_arguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_arguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	 iv_ruleXThrowExpression=ruleXThrowExpression 
	 { $current=$iv_ruleXThrowExpression.current; } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	 iv_ruleXReturnExpression=ruleXReturnExpression 
	 { $current=$iv_ruleXReturnExpression.current; } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
    }
((
(
ruleXExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression 
	 { $current=$iv_ruleXTryCatchFinallyExpression.current; } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		add(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'[' 
	']' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJvmTypeReferenceAccess().getLeftSquareBracketKeyword_0_1_0_1());
    }
	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmTypeReferenceAccess().getRightSquareBracketKeyword_0_1_0_2());
    }
))*)
    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_4=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
	    }
		lv_paramTypes_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_paramTypes_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
    }
)?	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_returnType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


