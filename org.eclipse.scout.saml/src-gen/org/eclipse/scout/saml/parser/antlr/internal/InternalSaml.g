/*
* generated by Xtext
*/
grammar InternalSaml;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.scout.saml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.scout.saml.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.scout.saml.services.SamlGrammarAccess;

}

@parser::members {

 	private SamlGrammarAccess grammarAccess;
 	
    public InternalSamlParser(TokenStream input, SamlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SamlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsRootElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleRootElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"RootElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleRootElement
entryRuleRootElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootElementRule()); }
	 iv_ruleRootElement=ruleRootElement 
	 { $current=$iv_ruleRootElement.current; } 
	 EOF 
;

// Rule RootElement
ruleRootElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRootElementAccess().getModuleElementParserRuleCall_0()); 
    }
    this_ModuleElement_0=ruleModuleElement
    { 
        $current = $this_ModuleElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRootElementAccess().getTranslationElementParserRuleCall_1()); 
    }
    this_TranslationElement_1=ruleTranslationElement
    { 
        $current = $this_TranslationElement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRootElementAccess().getCodeElementParserRuleCall_2()); 
    }
    this_CodeElement_2=ruleCodeElement
    { 
        $current = $this_CodeElement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRootElementAccess().getLookupElementParserRuleCall_3()); 
    }
    this_LookupElement_3=ruleLookupElement
    { 
        $current = $this_LookupElement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRootElementAccess().getTemplateElementParserRuleCall_4()); 
    }
    this_TemplateElement_4=ruleTemplateElement
    { 
        $current = $this_TemplateElement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRootElementAccess().getFormElementParserRuleCall_5()); 
    }
    this_FormElement_5=ruleFormElement
    { 
        $current = $this_FormElement_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleAbstractFieldElement
entryRuleAbstractFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractFieldElementRule()); }
	 iv_ruleAbstractFieldElement=ruleAbstractFieldElement 
	 { $current=$iv_ruleAbstractFieldElement.current; } 
	 EOF 
;

// Rule AbstractFieldElement
ruleAbstractFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractFieldElementAccess().getAbstractValueFieldElementParserRuleCall_0()); 
    }
    this_AbstractValueFieldElement_0=ruleAbstractValueFieldElement
    { 
        $current = $this_AbstractValueFieldElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractFieldElementAccess().getAbstractContainerFieldElementParserRuleCall_1()); 
    }
    this_AbstractContainerFieldElement_1=ruleAbstractContainerFieldElement
    { 
        $current = $this_AbstractContainerFieldElement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAbstractFieldProperties
entryRuleAbstractFieldProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractFieldPropertiesRule()); }
	 iv_ruleAbstractFieldProperties=ruleAbstractFieldProperties 
	 { $current=$iv_ruleAbstractFieldProperties.current; } 
	 EOF 
;

// Rule AbstractFieldProperties
ruleAbstractFieldProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractFieldPropertiesAccess().getTextTextAttributeParserRuleCall_0_0()); 
	    }
		lv_text_0_0=ruleTextAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractFieldPropertiesRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"TextAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractFieldPropertiesAccess().getVisibleVisibleAttribueParserRuleCall_1_0()); 
	    }
		lv_visible_1_0=ruleVisibleAttribue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractFieldPropertiesRule());
	        }
       		set(
       			$current, 
       			"visible",
        		lv_visible_1_0, 
        		"VisibleAttribue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractFieldPropertiesAccess().getMasterMasterAttributeParserRuleCall_2_0()); 
	    }
		lv_master_2_0=ruleMasterAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractFieldPropertiesRule());
	        }
       		set(
       			$current, 
       			"master",
        		lv_master_2_0, 
        		"MasterAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractFieldPropertiesAccess().getEnabledEnabledAttribueParserRuleCall_3_0()); 
	    }
		lv_enabled_3_0=ruleEnabledAttribue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractFieldPropertiesRule());
	        }
       		set(
       			$current, 
       			"enabled",
        		lv_enabled_3_0, 
        		"EnabledAttribue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTextAttribute
entryRuleTextAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextAttributeRule()); }
	 iv_ruleTextAttribute=ruleTextAttribute 
	 { $current=$iv_ruleTextAttribute.current; } 
	 EOF 
;

// Rule TextAttribute
ruleTextAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='text=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTextAttributeAccess().getTextKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTextAttributeAccess().getValueTranslationElementCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleEnabledAttribue
entryRuleEnabledAttribue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnabledAttribueRule()); }
	 iv_ruleEnabledAttribue=ruleEnabledAttribue 
	 { $current=$iv_ruleEnabledAttribue.current; } 
	 EOF 
;

// Rule EnabledAttribue
ruleEnabledAttribue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enabled=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnabledAttribueAccess().getEnabledKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnabledAttribueAccess().getValueBooleanTypeEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnabledAttribueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVisibleAttribue
entryRuleVisibleAttribue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisibleAttribueRule()); }
	 iv_ruleVisibleAttribue=ruleVisibleAttribue 
	 { $current=$iv_ruleVisibleAttribue.current; } 
	 EOF 
;

// Rule VisibleAttribue
ruleVisibleAttribue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='visible=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisibleAttribueAccess().getVisibleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisibleAttribueAccess().getValueBooleanTypeEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisibleAttribueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMasterAttribute
entryRuleMasterAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMasterAttributeRule()); }
	 iv_ruleMasterAttribute=ruleMasterAttribute 
	 { $current=$iv_ruleMasterAttribute.current; } 
	 EOF 
;

// Rule MasterAttribute
ruleMasterAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='master=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMasterAttributeAccess().getMasterKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMasterAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMasterAttributeAccess().getValueAbstractFieldElementCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleAbstractValueFieldElement
entryRuleAbstractValueFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractValueFieldElementRule()); }
	 iv_ruleAbstractValueFieldElement=ruleAbstractValueFieldElement 
	 { $current=$iv_ruleAbstractValueFieldElement.current; } 
	 EOF 
;

// Rule AbstractValueFieldElement
ruleAbstractValueFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldElementAccess().getStringElementParserRuleCall_0()); 
    }
    this_StringElement_0=ruleStringElement
    { 
        $current = $this_StringElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldElementAccess().getSmartfieldElementParserRuleCall_1()); 
    }
    this_SmartfieldElement_1=ruleSmartfieldElement
    { 
        $current = $this_SmartfieldElement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldElementAccess().getLongElementParserRuleCall_2()); 
    }
    this_LongElement_2=ruleLongElement
    { 
        $current = $this_LongElement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldElementAccess().getDoubleElementParserRuleCall_3()); 
    }
    this_DoubleElement_3=ruleDoubleElement
    { 
        $current = $this_DoubleElement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldElementAccess().getDateElementParserRuleCall_4()); 
    }
    this_DateElement_4=ruleDateElement
    { 
        $current = $this_DateElement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldElementAccess().getZregBoxElementParserRuleCall_5()); 
    }
    this_ZregBoxElement_5=ruleZregBoxElement
    { 
        $current = $this_ZregBoxElement_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAbstractValueFieldProperties
entryRuleAbstractValueFieldProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractValueFieldPropertiesRule()); }
	 iv_ruleAbstractValueFieldProperties=ruleAbstractValueFieldProperties 
	 { $current=$iv_ruleAbstractValueFieldProperties.current; } 
	 EOF 
;

// Rule AbstractValueFieldProperties
ruleAbstractValueFieldProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractValueFieldPropertiesAccess().getAbstractFieldPropertiesParserRuleCall_0()); 
    }
    this_AbstractFieldProperties_0=ruleAbstractFieldProperties
    { 
        $current = $this_AbstractFieldProperties_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAbstractValueFieldPropertiesAccess().getMandatoryMandatoryAttribueParserRuleCall_1_0()); 
	    }
		lv_mandatory_1_0=ruleMandatoryAttribue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAbstractValueFieldPropertiesRule());
	        }
       		set(
       			$current, 
       			"mandatory",
        		lv_mandatory_1_0, 
        		"MandatoryAttribue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMandatoryAttribue
entryRuleMandatoryAttribue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMandatoryAttribueRule()); }
	 iv_ruleMandatoryAttribue=ruleMandatoryAttribue 
	 { $current=$iv_ruleMandatoryAttribue.current; } 
	 EOF 
;

// Rule MandatoryAttribue
ruleMandatoryAttribue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mandatory=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMandatoryAttribueAccess().getMandatoryKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMandatoryAttribueAccess().getValueBooleanTypeEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMandatoryAttribueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAbstractContainerFieldElement
entryRuleAbstractContainerFieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractContainerFieldElementRule()); }
	 iv_ruleAbstractContainerFieldElement=ruleAbstractContainerFieldElement 
	 { $current=$iv_ruleAbstractContainerFieldElement.current; } 
	 EOF 
;

// Rule AbstractContainerFieldElement
ruleAbstractContainerFieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getAbstractContainerFieldElementAccess().getSequenceBoxElementParserRuleCall()); 
    }
    this_SequenceBoxElement_0=ruleSequenceBoxElement
    { 
        $current = $this_SequenceBoxElement_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleModuleElement
entryRuleModuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleElementRule()); }
	 iv_ruleModuleElement=ruleModuleElement 
	 { $current=$iv_ruleModuleElement.current; } 
	 EOF 
;

// Rule ModuleElement
ruleModuleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModuleElementAccess().getModuleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleElementAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTranslationElement
entryRuleTranslationElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTranslationElementRule()); }
	 iv_ruleTranslationElement=ruleTranslationElement 
	 { $current=$iv_ruleTranslationElement.current; } 
	 EOF 
;

// Rule TranslationElement
ruleTranslationElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='translation ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTranslationElementAccess().getTranslationKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTranslationElementAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTranslationElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTranslationElementAccess().getTranslationsTranslationAttributeParserRuleCall_2_0()); 
	    }
		lv_translations_2_0=ruleTranslationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTranslationElementRule());
	        }
       		add(
       			$current, 
       			"translations",
        		lv_translations_2_0, 
        		"TranslationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleTranslationAttribute
entryRuleTranslationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTranslationAttributeRule()); }
	 iv_ruleTranslationAttribute=ruleTranslationAttribute 
	 { $current=$iv_ruleTranslationAttribute.current; } 
	 EOF 
;

// Rule TranslationAttribute
ruleTranslationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_lang_0_0=RULE_ID
		{
			newLeafNode(lv_lang_0_0, grammarAccess.getTranslationAttributeAccess().getLangIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTranslationAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lang",
        		lv_lang_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTranslationAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_text_2_0=RULE_STRING
		{
			newLeafNode(lv_text_2_0, grammarAccess.getTranslationAttributeAccess().getTextSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTranslationAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleJavaElement
entryRuleJavaElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaElementRule()); }
	 iv_ruleJavaElement=ruleJavaElement 
	 { $current=$iv_ruleJavaElement.current; } 
	 EOF 
;

// Rule JavaElement
ruleJavaElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='java ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJavaElementAccess().getJavaKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJavaElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJavaElementAccess().getRunatRunAtAttributeParserRuleCall_2_0()); 
	    }
		lv_runat_2_0=ruleRunAtAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJavaElementRule());
	        }
       		set(
       			$current, 
       			"runat",
        		lv_runat_2_0, 
        		"RunAtAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJavaElementAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		lv_source_4_0=RULE_STRING
		{
			newLeafNode(lv_source_4_0, grammarAccess.getJavaElementAccess().getSourceSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJavaElementAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRunAtAttribute
entryRuleRunAtAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRunAtAttributeRule()); }
	 iv_ruleRunAtAttribute=ruleRunAtAttribute 
	 { $current=$iv_ruleRunAtAttribute.current; } 
	 EOF 
;

// Rule RunAtAttribute
ruleRunAtAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='runat=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRunAtAttributeAccess().getRunatKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRunAtAttributeAccess().getValueJavaRunAtAttributeListEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleJavaRunAtAttributeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRunAtAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"JavaRunAtAttributeList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCodeElement
entryRuleCodeElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeElementRule()); }
	 iv_ruleCodeElement=ruleCodeElement 
	 { $current=$iv_ruleCodeElement.current; } 
	 EOF 
;

// Rule CodeElement
ruleCodeElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='code ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodeElementAccess().getCodeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCodeElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCodeElementAccess().getIdCodeIdAttributeParserRuleCall_2_0()); 
	    }
		lv_id_2_0=ruleCodeIdAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCodeElementRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"CodeIdAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCodeIdAttribute
entryRuleCodeIdAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeIdAttributeRule()); }
	 iv_ruleCodeIdAttribute=ruleCodeIdAttribute 
	 { $current=$iv_ruleCodeIdAttribute.current; } 
	 EOF 
;

// Rule CodeIdAttribute
ruleCodeIdAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='id=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodeIdAttributeAccess().getIdKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getCodeIdAttributeAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeIdAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleLogicElement
entryRuleLogicElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicElementRule()); }
	 iv_ruleLogicElement=ruleLogicElement 
	 { $current=$iv_ruleLogicElement.current; } 
	 EOF 
;

// Rule LogicElement
ruleLogicElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='logic ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicElementAccess().getLogicKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicElementAccess().getTypeLogicTypeAttributeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleLogicTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicElementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"LogicTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicElementAccess().getPropertiesLogicOptionalPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleLogicOptionalProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"LogicOptionalProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLogicElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		lv_source_4_0=RULE_STRING
		{
			newLeafNode(lv_source_4_0, grammarAccess.getLogicElementAccess().getSourceSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLogicElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleLogicOptionalProperties
entryRuleLogicOptionalProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicOptionalPropertiesRule()); }
	 iv_ruleLogicOptionalProperties=ruleLogicOptionalProperties 
	 { $current=$iv_ruleLogicOptionalProperties.current; } 
	 EOF 
;

// Rule LogicOptionalProperties
ruleLogicOptionalProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOptionalPropertiesAccess().getRunatRunAtAttributeParserRuleCall_0_0()); 
	    }
		lv_runat_0_0=ruleRunAtAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOptionalPropertiesRule());
	        }
       		set(
       			$current, 
       			"runat",
        		lv_runat_0_0, 
        		"RunAtAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOptionalPropertiesAccess().getExecLogicExecAttributeParserRuleCall_1_0()); 
	    }
		lv_exec_1_0=ruleLogicExecAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOptionalPropertiesRule());
	        }
       		set(
       			$current, 
       			"exec",
        		lv_exec_1_0, 
        		"LogicExecAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLogicTypeAttribute
entryRuleLogicTypeAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicTypeAttributeRule()); }
	 iv_ruleLogicTypeAttribute=ruleLogicTypeAttribute 
	 { $current=$iv_ruleLogicTypeAttribute.current; } 
	 EOF 
;

// Rule LogicTypeAttribute
ruleLogicTypeAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicTypeAttributeAccess().getTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicTypeAttributeAccess().getValueLogicTypeAttributeListEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleLogicTypeAttributeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicTypeAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"LogicTypeAttributeList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLogicExecAttribute
entryRuleLogicExecAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicExecAttributeRule()); }
	 iv_ruleLogicExecAttribute=ruleLogicExecAttribute 
	 { $current=$iv_ruleLogicExecAttribute.current; } 
	 EOF 
;

// Rule LogicExecAttribute
ruleLogicExecAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='exec=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicExecAttributeAccess().getExecKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicExecAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getLogicExecAttributeAccess().getValueJavaElementCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleLookupElement
entryRuleLookupElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLookupElementRule()); }
	 iv_ruleLookupElement=ruleLookupElement 
	 { $current=$iv_ruleLookupElement.current; } 
	 EOF 
;

// Rule LookupElement
ruleLookupElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lookup ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLookupElementAccess().getLookupKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLookupElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLookupElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLookupElementAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getLookupElementAccess().getServicelogicJavaElementParserRuleCall_3_0_0()); 
	    }
		lv_servicelogic_3_1=ruleJavaElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLookupElementRule());
	        }
       		add(
       			$current, 
       			"servicelogic",
        		lv_servicelogic_3_1, 
        		"JavaElement");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getLookupElementAccess().getServicelogicLogicElementParserRuleCall_3_0_1()); 
	    }
		lv_servicelogic_3_2=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLookupElementRule());
	        }
       		add(
       			$current, 
       			"servicelogic",
        		lv_servicelogic_3_2, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLookupElementAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTemplateElement
entryRuleTemplateElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateElementRule()); }
	 iv_ruleTemplateElement=ruleTemplateElement 
	 { $current=$iv_ruleTemplateElement.current; } 
	 EOF 
;

// Rule TemplateElement
ruleTemplateElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='template ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateElementAccess().getTemplateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTemplateElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateElementAccess().getClassTemplateElementClassAttributeParserRuleCall_2_0()); 
	    }
		lv_class_2_0=ruleTemplateElementClassAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateElementRule());
	        }
       		set(
       			$current, 
       			"class",
        		lv_class_2_0, 
        		"TemplateElementClassAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateElementAccess().getReplacesTemplateElementReplacesAttributeParserRuleCall_3_0()); 
	    }
		lv_replaces_3_0=ruleTemplateElementReplacesAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateElementRule());
	        }
       		set(
       			$current, 
       			"replaces",
        		lv_replaces_3_0, 
        		"TemplateElementReplacesAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTemplateElementClassAttribute
entryRuleTemplateElementClassAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateElementClassAttributeRule()); }
	 iv_ruleTemplateElementClassAttribute=ruleTemplateElementClassAttribute 
	 { $current=$iv_ruleTemplateElementClassAttribute.current; } 
	 EOF 
;

// Rule TemplateElementClassAttribute
ruleTemplateElementClassAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateElementClassAttributeAccess().getClassKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateElementClassAttributeAccess().getValueQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateElementClassAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTemplateElementReplacesAttribute
entryRuleTemplateElementReplacesAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateElementReplacesAttributeRule()); }
	 iv_ruleTemplateElementReplacesAttribute=ruleTemplateElementReplacesAttribute 
	 { $current=$iv_ruleTemplateElementReplacesAttribute.current; } 
	 EOF 
;

// Rule TemplateElementReplacesAttribute
ruleTemplateElementReplacesAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='replaces=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateElementReplacesAttributeAccess().getReplacesKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateElementReplacesAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTemplateElementReplacesAttributeAccess().getValueAbstractScoutTypeCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleFormElement
entryRuleFormElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormElementRule()); }
	 iv_ruleFormElement=ruleFormElement 
	 { $current=$iv_ruleFormElement.current; } 
	 EOF 
;

// Rule FormElement
ruleFormElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='form ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFormElementAccess().getFormKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFormElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getModalFormElementModalAttributeParserRuleCall_2_0()); 
	    }
		lv_modal_2_0=ruleFormElementModalAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		set(
       			$current, 
       			"modal",
        		lv_modal_2_0, 
        		"FormElementModalAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getTextTextAttributeParserRuleCall_3_0()); 
	    }
		lv_text_3_0=ruleTextAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"TextAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getColumnsFormElementColumnsAttributeParserRuleCall_4_0()); 
	    }
		lv_columns_4_0=ruleFormElementColumnsAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		set(
       			$current, 
       			"columns",
        		lv_columns_4_0, 
        		"FormElementColumnsAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFormElementAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getElementsLogicElementParserRuleCall_6_0_0()); 
	    }
		lv_elements_6_1=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_1, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getElementsJavaElementParserRuleCall_6_0_1()); 
	    }
		lv_elements_6_2=ruleJavaElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_2, 
        		"JavaElement");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getFormElementAccess().getElementsAbstractFieldElementParserRuleCall_6_0_2()); 
	    }
		lv_elements_6_3=ruleAbstractFieldElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_6_3, 
        		"AbstractFieldElement");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFormElementAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleFormElementModalAttribute
entryRuleFormElementModalAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormElementModalAttributeRule()); }
	 iv_ruleFormElementModalAttribute=ruleFormElementModalAttribute 
	 { $current=$iv_ruleFormElementModalAttribute.current; } 
	 EOF 
;

// Rule FormElementModalAttribute
ruleFormElementModalAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='modal=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFormElementModalAttributeAccess().getModalKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormElementModalAttributeAccess().getValueBooleanTypeEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBooleanType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormElementModalAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BooleanType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFormElementColumnsAttribute
entryRuleFormElementColumnsAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormElementColumnsAttributeRule()); }
	 iv_ruleFormElementColumnsAttribute=ruleFormElementColumnsAttribute 
	 { $current=$iv_ruleFormElementColumnsAttribute.current; } 
	 EOF 
;

// Rule FormElementColumnsAttribute
ruleFormElementColumnsAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='columns=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFormElementColumnsAttributeAccess().getColumnsKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getFormElementColumnsAttributeAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormElementColumnsAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleSequenceBoxElement
entryRuleSequenceBoxElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceBoxElementRule()); }
	 iv_ruleSequenceBoxElement=ruleSequenceBoxElement 
	 { $current=$iv_ruleSequenceBoxElement.current; } 
	 EOF 
;

// Rule SequenceBoxElement
ruleSequenceBoxElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sequence_box ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceBoxElementAccess().getSequence_boxKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSequenceBoxElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceBoxElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getPropertiesAbstractFieldPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleAbstractFieldProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"AbstractFieldProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceBoxElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getChildrenLogicElementParserRuleCall_3_1_0_0()); 
	    }
		lv_children_4_1=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_1, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSequenceBoxElementAccess().getChildrenAbstractFieldElementParserRuleCall_3_1_0_1()); 
	    }
		lv_children_4_2=ruleAbstractFieldElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceBoxElementRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_2, 
        		"AbstractFieldElement");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSequenceBoxElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleStringElement
entryRuleStringElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringElementRule()); }
	 iv_ruleStringElement=ruleStringElement 
	 { $current=$iv_ruleStringElement.current; } 
	 EOF 
;

// Rule StringElement
ruleStringElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='string ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringElementAccess().getStringKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStringElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getPropertiesStringElementPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleStringElementProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"StringElementProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_4_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_4_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleStringElementProperties
entryRuleStringElementProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringElementPropertiesRule()); }
	 iv_ruleStringElementProperties=ruleStringElementProperties 
	 { $current=$iv_ruleStringElementProperties.current; } 
	 EOF 
;

// Rule StringElementProperties
ruleStringElementProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStringElementPropertiesAccess().getAbstractValueFieldPropertiesParserRuleCall_0()); 
    }
    this_AbstractValueFieldProperties_0=ruleAbstractValueFieldProperties
    { 
        $current = $this_AbstractValueFieldProperties_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStringElementPropertiesAccess().getMaxlenStringElementMaxlenAttributeParserRuleCall_1_0()); 
	    }
		lv_maxlen_1_0=ruleStringElementMaxlenAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringElementPropertiesRule());
	        }
       		set(
       			$current, 
       			"maxlen",
        		lv_maxlen_1_0, 
        		"StringElementMaxlenAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringElementMaxlenAttribute
entryRuleStringElementMaxlenAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringElementMaxlenAttributeRule()); }
	 iv_ruleStringElementMaxlenAttribute=ruleStringElementMaxlenAttribute 
	 { $current=$iv_ruleStringElementMaxlenAttribute.current; } 
	 EOF 
;

// Rule StringElementMaxlenAttribute
ruleStringElementMaxlenAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='maxlen=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringElementMaxlenAttributeAccess().getMaxlenKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getStringElementMaxlenAttributeAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringElementMaxlenAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleDoubleElement
entryRuleDoubleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleElementRule()); }
	 iv_ruleDoubleElement=ruleDoubleElement 
	 { $current=$iv_ruleDoubleElement.current; } 
	 EOF 
;

// Rule DoubleElement
ruleDoubleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='double ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDoubleElementAccess().getDoubleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDoubleElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getPropertiesAbstractValueFieldPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleAbstractValueFieldProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"AbstractValueFieldProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoubleElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleElementAccess().getChildrenLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_children_4_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleElementRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDoubleElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleLongElement
entryRuleLongElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLongElementRule()); }
	 iv_ruleLongElement=ruleLongElement 
	 { $current=$iv_ruleLongElement.current; } 
	 EOF 
;

// Rule LongElement
ruleLongElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='long ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLongElementAccess().getLongKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLongElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getPropertiesAbstractValueFieldPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleAbstractValueFieldProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"AbstractValueFieldProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLongElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLongElementAccess().getChildrenLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_children_4_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLongElementRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLongElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleDateElement
entryRuleDateElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateElementRule()); }
	 iv_ruleDateElement=ruleDateElement 
	 { $current=$iv_ruleDateElement.current; } 
	 EOF 
;

// Rule DateElement
ruleDateElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='date ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateElementAccess().getDateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDateElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getPropertiesAbstractValueFieldPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleAbstractValueFieldProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"AbstractValueFieldProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDateElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDateElementAccess().getChildrenLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_children_4_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateElementRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDateElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleSmartfieldElement
entryRuleSmartfieldElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmartfieldElementRule()); }
	 iv_ruleSmartfieldElement=ruleSmartfieldElement 
	 { $current=$iv_ruleSmartfieldElement.current; } 
	 EOF 
;

// Rule SmartfieldElement
ruleSmartfieldElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='smartfield ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmartfieldElementAccess().getSmartfieldKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSmartfieldElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getPropertiesSmartFieldElementPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleSmartFieldElementProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"SmartFieldElementProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSmartfieldElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementAccess().getLogicLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_logic_4_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartfieldElementRule());
	        }
       		add(
       			$current, 
       			"logic",
        		lv_logic_4_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSmartfieldElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleSmartFieldElementProperties
entryRuleSmartFieldElementProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmartFieldElementPropertiesRule()); }
	 iv_ruleSmartFieldElementProperties=ruleSmartFieldElementProperties 
	 { $current=$iv_ruleSmartFieldElementProperties.current; } 
	 EOF 
;

// Rule SmartFieldElementProperties
ruleSmartFieldElementProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSmartFieldElementPropertiesAccess().getAbstractValueFieldPropertiesParserRuleCall_0()); 
    }
    this_AbstractValueFieldProperties_0=ruleAbstractValueFieldProperties
    { 
        $current = $this_AbstractValueFieldProperties_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartFieldElementPropertiesAccess().getCodeSmartfieldElementCodeAttributeParserRuleCall_1_0()); 
	    }
		lv_code_1_0=ruleSmartfieldElementCodeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartFieldElementPropertiesRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_1_0, 
        		"SmartfieldElementCodeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartFieldElementPropertiesAccess().getValue_typeSmartfieldElementValueTypeAttributeParserRuleCall_2_0()); 
	    }
		lv_value_type_2_0=ruleSmartfieldElementValueTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartFieldElementPropertiesRule());
	        }
       		set(
       			$current, 
       			"value_type",
        		lv_value_type_2_0, 
        		"SmartfieldElementValueTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSmartFieldElementPropertiesAccess().getLookupSmartfieldElementLookupAttributeParserRuleCall_3_0()); 
	    }
		lv_lookup_3_0=ruleSmartfieldElementLookupAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmartFieldElementPropertiesRule());
	        }
       		set(
       			$current, 
       			"lookup",
        		lv_lookup_3_0, 
        		"SmartfieldElementLookupAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSmartfieldElementCodeAttribute
entryRuleSmartfieldElementCodeAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmartfieldElementCodeAttributeRule()); }
	 iv_ruleSmartfieldElementCodeAttribute=ruleSmartfieldElementCodeAttribute 
	 { $current=$iv_ruleSmartfieldElementCodeAttribute.current; } 
	 EOF 
;

// Rule SmartfieldElementCodeAttribute
ruleSmartfieldElementCodeAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='code=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmartfieldElementCodeAttributeAccess().getCodeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementCodeAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSmartfieldElementCodeAttributeAccess().getValueCodeElementCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleSmartfieldElementValueTypeAttribute
entryRuleSmartfieldElementValueTypeAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmartfieldElementValueTypeAttributeRule()); }
	 iv_ruleSmartfieldElementValueTypeAttribute=ruleSmartfieldElementValueTypeAttribute 
	 { $current=$iv_ruleSmartfieldElementValueTypeAttribute.current; } 
	 EOF 
;

// Rule SmartfieldElementValueTypeAttribute
ruleSmartfieldElementValueTypeAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='value_type=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmartfieldElementValueTypeAttributeAccess().getValue_typeKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementValueTypeAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSmartfieldElementValueTypeAttributeAccess().getValueJvmTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSmartfieldElementLookupAttribute
entryRuleSmartfieldElementLookupAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmartfieldElementLookupAttributeRule()); }
	 iv_ruleSmartfieldElementLookupAttribute=ruleSmartfieldElementLookupAttribute 
	 { $current=$iv_ruleSmartfieldElementLookupAttribute.current; } 
	 EOF 
;

// Rule SmartfieldElementLookupAttribute
ruleSmartfieldElementLookupAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lookup=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmartfieldElementLookupAttributeAccess().getLookupKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmartfieldElementLookupAttributeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getSmartfieldElementLookupAttributeAccess().getValueLookupElementCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleZregBoxElement
entryRuleZregBoxElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getZregBoxElementRule()); }
	 iv_ruleZregBoxElement=ruleZregBoxElement 
	 { $current=$iv_ruleZregBoxElement.current; } 
	 EOF 
;

// Rule ZregBoxElement
ruleZregBoxElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='zreg_sequence_box ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getZregBoxElementAccess().getZreg_sequence_boxKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getZregBoxElementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getZregBoxElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getZregBoxElementAccess().getPropertiesAbstractFieldPropertiesParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleAbstractFieldProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getZregBoxElementRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"AbstractFieldProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getZregBoxElementAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getZregBoxElementAccess().getChildrenLogicElementParserRuleCall_3_1_0()); 
	    }
		lv_children_4_0=ruleLogicElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getZregBoxElementRule());
	        }
       		add(
       			$current, 
       			"children",
        		lv_children_4_0, 
        		"LogicElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getZregBoxElementAccess().getRightCurlyBracketKeyword_3_2());
    }
)?)
;





// Rule BooleanType
ruleBooleanType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='true' 
	{
        $current = grammarAccess.getBooleanTypeAccess().getTrueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBooleanTypeAccess().getTrueEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='false' 
	{
        $current = grammarAccess.getBooleanTypeAccess().getFalseEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBooleanTypeAccess().getFalseEnumLiteralDeclaration_1()); 
    }
));



// Rule JavaRunAtAttributeList
ruleJavaRunAtAttributeList returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='client' 
	{
        $current = grammarAccess.getJavaRunAtAttributeListAccess().getClientEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getJavaRunAtAttributeListAccess().getClientEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='server' 
	{
        $current = grammarAccess.getJavaRunAtAttributeListAccess().getServerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getJavaRunAtAttributeListAccess().getServerEnumLiteralDeclaration_1()); 
    }
));



// Rule LogicTypeAttributeList
ruleLogicTypeAttributeList returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='global' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getGlobalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLogicTypeAttributeListAccess().getGlobalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='all' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getAllEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLogicTypeAttributeListAccess().getAllEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='modify_load' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getModify_loadEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLogicTypeAttributeListAccess().getModify_loadEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='modify_store' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getModify_storeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getLogicTypeAttributeListAccess().getModify_storeEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='new_load' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getNew_loadEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getLogicTypeAttributeListAccess().getNew_loadEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='new_store' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getNew_storeEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getLogicTypeAttributeListAccess().getNew_storeEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='changed' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getChangedEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getLogicTypeAttributeListAccess().getChangedEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='click' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getClickEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getLogicTypeAttributeListAccess().getClickEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='master_changed' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getMaster_changedEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getLogicTypeAttributeListAccess().getMaster_changedEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='init' 
	{
        $current = grammarAccess.getLogicTypeAttributeListAccess().getInitEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getLogicTypeAttributeListAccess().getInitEnumLiteralDeclaration_9()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


